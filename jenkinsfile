pipeline {
    agent {
        docker {
            image 'python:3.8'
            args '-u root'
        }
    }

    stages {
        stage('Setup Python') {
            steps {
                sh """
                python -m venv ${env.WORKSPACE}/venv
                """
            }
        }
        stage('Install requirements') {
            steps {
                sh """
                . ${env.WORKSPACE}/venv/bin/activate
                pip install --upgrade pip
                pip install -r requirements.txt
                """
            }
        }
        stage('Run tests') {
            steps {
                sh """
                . ${env.WORKSPACE}/venv/bin/activate
                pytest --junitxml=${env.WORKSPACE}/report.xml --cov=. --cov-report=xml:${env.WORKSPACE}/coverage.xml --cov-report=html
                """
            }
            //post {
            //    always {
            //        junit '**/report.xml'
            //        cobertura coberturaReportFile: '**/coverage.xml'
            //    }
            //}
        }
        stage('Code analysis') {
            steps {
                sh """
                . ${env.WORKSPACE}/venv/bin/activate
                find src -name '*.py' | xargs pylint -f parseable | tee pylint.log
                """
            }
            post {
                always {
                    recordIssues(
                        tool: pyLint(pattern: 'pylint.log')
                    )
                }
            }
        }
        stage('Coverage report') {
            steps {
                junit '**/report.xml'
                cobertura coberturaReportFile: '**/coverage.xml'
            }
        }
    }
}