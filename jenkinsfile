pipeline {
    agent {
        docker {
            image 'python:3.8'
            args '-u root' // Run as root to install dependencies
        }
    }

    stages {
        stage('Setup Python Environment') {
            steps {
                // Setup Python virtual environment
                sh """
                python -m venv ${env.WORKSPACE}/venv
                """
            }
        }

        stage('Install dependencies') {
            steps {
                // Install dependencies
                sh """
                . ${env.WORKSPACE}/venv/bin/activate
                pip install --upgrade pip
                pip install -r requirements.txt
                """
            }
        }

        stage('Run tests') {
            steps {
                // Run tests
                sh """
                . ${env.WORKSPACE}/venv/bin/activate
                python -m unittest discover -s test
                pytest --junitxml=report.xml --cov=. --cov-report=xml
                """
            }
            post {
                always {
                    // Publish JUnit test results
                    junit 'coverage.xml'
                    // Publish coverage report
                    recordCoverage(tools: [[parser: 'COBERTURA', pattern: '**/coverage.xml']])
                    
                }
            }
        }

        stage('Deploy') {
            steps {
                // Add your deployment steps here
                sh """
                echo "Deploying application..."
                """
            }
        }
    }
}