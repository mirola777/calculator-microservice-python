pipeline {
    agent any

    environment {
        PYTHON_VERSION = '3.9'
        VENV_PATH = 'venv'
    }

    stages {
        stage('Checkout') {
            steps {
                // Clonar el repositorio
                checkout scm
            }
        }

        stage('Set up Python') {
            steps {
                // Configurar Python y crear un entorno virtual
                sh """
                sudo apt-get update
                sudo apt-get install -y python${PYTHON_VERSION}
                sudo apt-get install -y python3-pip
                python${PYTHON_VERSION} -m pip install --upgrade pip
                python${PYTHON_VERSION} -m venv ${VENV_PATH}
                """
            }
        }

        stage('Install dependencies') {
            steps {
                // Instalar dependencias
                sh """
                source ${VENV_PATH}/bin/activate
                pip install -r requirements.txt
                """
            }
        }

        stage('Run tests') {
            steps {
                // Ejecutar pruebas
                sh """
                source ${VENV_PATH}/bin/activate
                python -m unittest discover -s test
                """
            }
        }

        stage('Deploy') {
            steps {
                script {
                    // Desplegar tu aplicación Flask
                    echo 'Deploying application...'
                    // Ejemplo: sh 'scp -r . user@your_server:/path/to/deploy'
                }
            }
        }
    }

    post {
        always {
            // Limpiar después de que el pipeline se ejecute
            echo 'Cleaning up...'
            sh 'rm -rf ${VENV_PATH}'
        }
    }
}